!function(){"use strict";class e{constructor(e,t){let{data:s,handleImageClick:n}=e;this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=`Photo of ${this._name}`,this._cardCaption=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardCaption.textContent=this._name,this._setEventListeners(),this._cardElement}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteCard())),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({link:this._link,text:this._name})))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){return e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){27===e.which&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class o extends n{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const r=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),a=document.querySelector("#add-card-modal"),l=(document.querySelector("#image-popup"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),c=document.querySelector("#profile-decription-input"),u=i.querySelector(".modal__form"),d=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),_={popupSelector:"#image-popup"},m=new class extends n{constructor(e){super(e),this._modalImageEl=this._popupElement.querySelector(".modal__image"),this._modalCaption=this._popupElement.querySelector(".modal__caption")}open(e){this._modalImageEl.src=e.link,this._modalImageEl.alt=e.name,this._modalCaption.textContent=e.text,super.open()}}(_),p=new class{constructor(e,t){this._name=document.querySelector(e),this._job=document.querySelector(t)}getUserInfo(){return this._userInfo={name:this._name.textContent,description:this._job.textContent},this._userInfo}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}}(".profile__title",".profile__description"),h=t=>new e({data:t,handleImageClick:e=>{m.open(e)}},"#card-template").getView(),E=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=h(e);E.addItem(t)}},".cards__list"),S=new o("#profile-edit-modal",(e=>{!function(e){const{title:t,description:s}=e;p.setUserInfo(t,s),S.close()}(e)})),f=new o("#add-card-modal",(e=>{!function(e){const t={name:e.title,link:e.url},s=h(t);E.addItem(s)}(e)})),v=new t(s,u),g=new t(s,a);E.renderItems([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}]),m.setEventListeners(),S.setEventListeners(),f.setEventListeners(),v.enableValidation(),g.enableValidation(),r.addEventListener("click",(function(){!function(){const{name:e,description:t}=p.getUserInfo();l.value=e,c.value=t}(),S.open()})),d.addEventListener("click",(()=>{g.toggleButtonState(),f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,