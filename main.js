!function(){"use strict";class e{constructor(e,t){let{data:r,userID:s,isLiked:i,handleImageClick:o,handleDeleteCardClick:n,handleCardLikeClick:a,handleConfirm:l}=e;this._handleConfirm=l,this._name=r.name,this._link=r.link,this._owner=r.owner,this._id=r._id,this._userID=s,this._isLiked=r.isLiked,this._cardSelector=t,this._handleImageClick=o,this._handleDeleteCardClick=n,this._handleCardLikeClick=a}getId(){return this._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=`Photo of ${this._name}`,this._cardCaption=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardCaption.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleCardLikeClick(this._id,this._isLiked)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteCardClick())),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick({link:this._link,text:this._name})))}_renderLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}setLike(e){this._isLiked=e,this._renderLikes()}isLiked(){return this._isLiked}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){return e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){27===e.which&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._popupElement=document.querySelector(e),this.submitButton=this._popupForm.querySelector(".modal__button"),this.submitButtonText=this.submitButton.textContent}_getInputValues(){return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>this._formValues[e.name]=e.value)),this._formValues}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this.submitButton.textContent=e?t:this.submitButtonText}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const o=document.querySelector("#profile-edit-button"),n=document.querySelector(".profile__avatar-container"),a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#avatar-edit-modal"),c=document.querySelector("#add-card-modal"),d=(document.querySelector("#image-popup"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),h=document.querySelector("#profile-decription-input"),u=a.querySelector(".modal__form"),_=(document.querySelector(".profile__image"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button")),m=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._authorization=r.authorization}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}updateProfileInfo(e){let{title:t,description:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addCardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}removeCardLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authorization}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"27d1bd70-108d-4f8b-b35a-2fb4fb8998a7","Content-Type":"application/json"}}),p=new i("#avatar-edit-modal",(e=>{p.renderLoading(!0,"Saving..."),m.updateAvatar(e).then((e=>{C.setAvatar(e.avatar),p.close()})).catch((e=>{console.error(e)})).finally((()=>{p.renderLoading(!1)}))})),E={popupSelector:"#image-popup"},v=new class extends s{constructor(e){super(e),this._modalImageEl=this._popupElement.querySelector(".modal__image"),this._modalCaption=this._popupElement.querySelector(".modal__caption")}open(e){this._modalImageEl.src=e.link,this._modalImageEl.alt=e.name,this._modalCaption.textContent=e.text,super.open()}}(E),C=new class{constructor(e,t,r){this._name=document.querySelector(e),this._job=document.querySelector(t),this._avatar=document.querySelector(r)}getUserInfo(){return this._userInfo={name:this._name.textContent,description:this._job.textContent},this._userInfo}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}setAvatar(e){this._avatar.src=e}}(".profile__title",".profile__description",".profile__image");m.getUserInfo().then((e=>{console.log(e),C.setUserInfo(e.name,e.about)}));const f=new class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(),this.close()})),super.setEventListeners()}close(){super.close()}setSubmitAction(e){this._handleFormSubmit=e}}("#confirm-delete-modal",(e=>{f.renderLoading(!0,"Deleting..."),m.removeCard(e).then((()=>{f.close()})).catch((e=>{console.error(e)})).finally((()=>{f.renderLoading(!1)}))}));f.setEventListeners();const L=t=>new e({data:t,handleImageClick:e=>{v.open(e)},handleDeleteCardClick:q,handleCardLikeClick:B},"#card-template").getView(),k=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=L(e);k.addItem(t)}},".cards__list"),S=new i("#profile-edit-modal",(e=>{!function(e){S.renderLoading(!0,"Saving..."),m.updateProfileInfo(e).then((e=>{const{name:t,about:r}=e;C.setUserInfo(t,r),S.close()})).finally((()=>{S.renderLoading(!1)}))}(e)})),b=new i("#add-card-modal",(e=>{!function(e){b.renderLoading(!0,"Saving..."),m.addCard(e).then((e=>{const t=L(e);k.addItem(t)})).finally((()=>{b.renderLoading(!1)}))}(e)})),y=new t(r,u),g=new t(r,c),I=new t(r,l);function q(){f.open(),f.setSubmitAction((()=>{const e=this.getId();m.removeCard(e).then((e=>{this.handleDeleteCard()})).catch((e=>{console.error(e)}))}))}function B(e,t){t?m.removeCardLike(e).then((e=>this.setLike(e.isLiked))):m.addCardLike(e).then((e=>{this.setLike(e.isLiked)}))}m.getInitialCards().then((e=>{k.renderItems(e)})),v.setEventListeners(),S.setEventListeners(),b.setEventListeners(),p.setEventListeners(),y.enableValidation(),g.enableValidation(),I.enableValidation(),o.addEventListener("click",(function(){!function(){const{name:e,description:t}=C.getUserInfo();d.value=e,h.value=t}(),S.open()})),_.addEventListener("click",(()=>{g.toggleButtonState(),b.open()})),n.addEventListener("click",(()=>{I.toggleButtonState(),p.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,